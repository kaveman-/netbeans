# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2006, 2016 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
javac.source=1.6


# Hidden class found: antlr.AlternativeElement in method protected void antlr.JavaCodeGenerator.genASTDeclaration(antlr.AlternativeEle
# ment,java.lang.String,java.lang.String) in class antlr.JavaCodeGenerator
# Hidden class found: antlr.StringLiteralElement in method public void antlr.HTMLCodeGenerator.gen(antlr.StringLiteralElement,antlr.Co
# ntext) in class antlr.HTMLCodeGenerator
# Hidden class found: antlr.BlockEndElement in method public void antlr.DocBookCodeGenerator.gen(antlr.BlockEndElement,antlr.Context)
# in class antlr.DocBookCodeGenerator
# Hidden class found: antlr.AlternativeBlock in method public void antlr.DiagnosticCodeGenerator.genLookaheadSetForBlock(antlr.Alterna
# tiveBlock) in class antlr.DiagnosticCodeGenerator
# Hidden class found: antlr.AlternativeBlock in method public abstract void antlr.CodeGenerator.gen(antlr.AlternativeBlock,antlr.Conte
# xt) in class antlr.CodeGenerator
# Hidden class found: antlr.Alternative in method public void antlr.RuleBlock.addAlternative(antlr.Alternative) in class antlr.RuleBlo
# Hidden class found: antlr.RuleRefElement in method public abstract antlr.Lookahead antlr.LLkGrammarAnalyzer.look(int,antlr.RuleRefEl
# ement) in class antlr.LLkGrammarAnalyzer
# Hidden class found: antlr.Alternative in method protected void antlr.DocBookCodeGenerator.genAlt(antlr.Alternative) in class antlr.D
# ocBookCodeGenerator
# Hidden class found: antlr.Alternative in method protected void antlr.JavaCodeGenerator.genAlt(antlr.Alternative,antlr.AlternativeBlo
# ck,antlr.Context) in class antlr.JavaCodeGenerator
# Hidden class found: antlr.TokenRangeElement in method public void antlr.JavaCodeGenerator.gen(antlr.TokenRangeElement,antlr.Context)
# in class antlr.JavaCodeGenerator
# Hidden class found: antlr.TokenRangeElement in method public void antlr.DiagnosticCodeGenerator.gen(antlr.TokenRangeElement,antlr.Co
# ntext) in class antlr.DiagnosticCodeGenerator
# Hidden class found: antlr.TokenStreamRewriteEngine$RewriteOperation in method protected void antlr.TokenStreamRewriteEngine.addToSor
# tedRewriteList(antlr.TokenStreamRewriteEngine$RewriteOperation) in class antlr.TokenStreamRewriteEngine
# Hidden class found: antlr.LexerGrammar in method public void antlr.DocBookCodeGenerator.gen(antlr.LexerGrammar) throws java.io.IOExc
# eption in class antlr.DocBookCodeGenerator
# Hidden class found: antlr.TreeElement in method public void antlr.HTMLCodeGenerator.gen(antlr.TreeElement,antlr.Context) in class an
# tlr.HTMLCodeGenerator
# Hidden class found: antlr.TokenRangeElement in method public antlr.Lookahead antlr.LLkAnalyzer.look(int,antlr.TokenRangeElement) in
# class antlr.LLkAnalyzer
sigtest.gen.fail.on.error=false

spec.version.base=2.38.7
